<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd">
	
	<osgi:service interface="com.service.TutorialService">
		<bean class="tutorialimpl.ServiceImpl">
		</bean>
	</osgi:service>

	<aop:aspectj-autoproxy />
	<!-- Definition of the Aspect -->
	<bean id="logAspect" class="tutorial.aspect.Myaspect" />

	<aop:config>
		<aop:aspect id="log" ref="logAspect">

			<!-- <aop:advisor advice-ref="logAspect" pointcut="execution(* tutorialimpl.ServiceImpl.*(..))" 
				/> pointcut="execution(* remote.impl.MyRemoteServiceImpl.*(..))" /> <aop:pointcut 
				=""/> <aop:after-returning pointcut-ref="selectAll" returning="retVal" method="doAfterReturningAdvice" 
				/> <aop:after-throwing pointcut-ref="selectAll" throwing="ex" method="doAfterThrowingAdvice" 
				/> -->

			<aop:pointcut expression="execution(public * *(..))" id="selectAll" />
			<aop:before pointcut-ref="selectAll" method="dobefore" />
			<aop:after pointcut-ref="selectAll" method="doafter" />
		<!--  	<aop:around method="doAround" pointcut-ref="selectAll" />
		-->
		</aop:aspect>
	</aop:config>

</beans>

